import { serve } from "https://deno.land/std@0.168.0/http/server.ts"
import "https://deno.land/x/xhr@0.1.0/mod.ts"

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
}

serve(async (req) => {
  // Handle CORS
  if (req.method === 'OPTIONS') {
    return new Response('ok', { headers: corsHeaders })
  }

  try {
    const { city, serviceType, repairerCount, averageRating, existingContent, regenerate } = await req.json()

    console.log(`üöÄ G√©n√©ration contenu SEO pour ${city} - ${serviceType}`)

    // Validation des param√®tres
    if (!city || !serviceType) {
      throw new Error('Param√®tres city et serviceType requis')
    }

    // Configuration Mistral AI
    const mistralApiKey = Deno.env.get('MISTRAL_API_KEY')
    
    if (!mistralApiKey) {
      console.log('‚ö†Ô∏è Cl√© Mistral manquante, utilisation du template statique')
      return generateStaticContent(city, serviceType, repairerCount, averageRating)
    }

    // Prompt optimis√© pour la g√©n√©ration de contenu SEO local
    const prompt = `Tu es un expert en SEO local et r√©daction web. G√©n√®re un contenu optimis√© pour la page SEO locale d'un service de r√©paration.

Ville: ${city}
Service: r√©paration ${serviceType}
Nombre de r√©parateurs: ${repairerCount || 1}
Note moyenne: ${averageRating || 4.8}/5

G√©n√®re UNIQUEMENT un objet JSON avec cette structure exacte:
{
  "title": "Titre H1 optimis√© SEO (60-70 caract√®res)",
  "metaDescription": "Meta description unique et engageante (150-160 caract√®res)",
  "h1": "Titre principal de la page",
  "paragraph1": "Premier paragraphe informatif (200-250 mots)",
  "paragraph2": "Deuxi√®me paragraphe avec d√©tails locaux (200-250 mots)"
}

Exigences:
- Ton professionnel mais accessible
- Int√©grer naturellement les mots-cl√©s: "r√©paration ${serviceType} ${city}", "r√©parateur ${serviceType}", "${city}"
- Mentionner les ${repairerCount} r√©parateurs locaux
- Inclure la note ${averageRating}/5
- √âviter le marketing agressif
- Focus sur la proximit√©, rapidit√©, qualit√©`

    try {
      const response = await fetch('https://api.mistral.ai/v1/chat/completions', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${mistralApiKey}`,
        },
        body: JSON.stringify({
          model: 'mistral-small-latest',
          messages: [
            {
              role: 'user',
              content: prompt
            }
          ],
          temperature: 0.7,
          max_tokens: 1500
        })
      })

      if (!response.ok) {
        console.error(`‚ùå Erreur Mistral API: ${response.status}`)
        throw new Error(`Erreur API Mistral: ${response.status}`)
      }

      const data = await response.json()
      const content = data.choices[0]?.message?.content?.trim()

      if (!content) {
        throw new Error('R√©ponse vide de Mistral AI')
      }

      // Parser le JSON de la r√©ponse
      let parsedContent
      try {
        // Nettoyer le contenu (supprimer les √©ventuels backticks ou markdown)
        const cleanContent = content.replace(/```json|```/g, '').trim()
        parsedContent = JSON.parse(cleanContent)
      } catch (parseError) {
        console.error('‚ùå Erreur parsing JSON:', content)
        throw new Error('Format de r√©ponse invalide de l\'IA')
      }

      // Validation de la structure
      const requiredFields = ['title', 'metaDescription', 'h1', 'paragraph1', 'paragraph2']
      for (const field of requiredFields) {
        if (!parsedContent[field]) {
          console.error(`‚ùå Champ manquant: ${field}`)
          throw new Error(`Champ requis manquant: ${field}`)
        }
      }

      console.log('‚úÖ Contenu g√©n√©r√© avec succ√®s')

      return new Response(JSON.stringify({
        success: true,
        content: parsedContent,
        model: 'mistral-small-latest',
        tokens: data.usage?.total_tokens || 0
      }), {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      })

    } catch (mistralError) {
      console.error('‚ùå Erreur Mistral:', mistralError)
      // Fallback sur le contenu statique
      return generateStaticContent(city, serviceType, repairerCount, averageRating)
    }

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©ration SEO:', error)
    return new Response(JSON.stringify({
      success: false,
      error: error.message
    }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    })
  }
})

function generateStaticContent(city: string, serviceType: string, repairerCount: number, averageRating: number) {
  const content = {
    title: `R√©paration ${serviceType} ${city} - Experts certifi√©s`,
    metaDescription: `R√©paration ${serviceType} √† ${city} ‚úì ${repairerCount} r√©parateurs certifi√©s ‚úì Note ${averageRating}/5 ‚úì Devis gratuit ‚úì Intervention rapide`,
    h1: `R√©paration ${serviceType} ${city} - Service professionnel`,
    paragraph1: `Besoin d'une r√©paration ${serviceType} √† ${city} ? Nos ${repairerCount} r√©parateurs certifi√©s vous offrent un service de qualit√© avec une note moyenne de ${averageRating}/5. Que votre appareil ait subi une chute, un probl√®me d'√©cran, de batterie ou tout autre dysfonctionnement, nos experts locaux interviennent rapidement avec des pi√®ces de qualit√©. Un devis gratuit vous sera fourni en moins de 24h, avec une transparence totale sur les tarifs.`,
    paragraph2: `√Ä ${city}, nous privil√©gions la proximit√© et la confiance. Nos r√©parateurs ${serviceType} sont s√©lectionn√©s pour leur expertise technique et leur engagement envers la satisfaction client. Chaque intervention est garantie et nous utilisons exclusivement des pi√®ces compatibles ou d'origine. L'impact √©cologique est au c≈ìur de nos pr√©occupations : r√©parer plut√¥t que remplacer, c'est √©conomiser en moyenne 15kg de CO2 et prolonger la dur√©e de vie de votre appareil de 2 ans.`
  }

  return new Response(JSON.stringify({
    success: true,
    content,
    model: 'static-template',
    tokens: 0
  }), {
    headers: { 'Content-Type': 'application/json', ...corsHeaders },
  })
}